name: Force Deploy (Manual Trigger)

on:
  workflow_dispatch:
    inputs:
      clear_cache:
        description: 'Clear cache before build'
        required: false
        default: 'true'
        type: boolean

jobs:
  force-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Clear cache if requested
        if: ${{ inputs.clear_cache }}
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -rf dist

      - name: Install dependencies
        run: npm ci

      - name: Build with timestamp
        run: |
          echo "Build started at: $(date)"
          npm run build
          echo "Build completed at: $(date)"

      - name: Verify build output
        run: |
          echo "Build directory contents:"
          ls -la dist/
          echo "Build size:"
          du -sh dist/

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS with verbose output
        run: |
          echo "Starting deployment at: $(date)"
          rsync -avz --delete --progress dist/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${{ secrets.VPS_PATH }}/
          echo "Deployment completed at: $(date)"

      - name: Reload service and clear server cache
        if: ${{ always() }}
        env:
          RELOAD_CMD: ${{ secrets.VPS_RELOAD_CMD }}
        run: |
          if [ -n "$RELOAD_CMD" ]; then
            echo "Reloading service..."
            ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "$RELOAD_CMD"
          fi
          # Clear Nginx cache if applicable
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo nginx -s reload || true"
          echo "Service reload completed"